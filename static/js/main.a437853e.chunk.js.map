{"version":3,"sources":["components/about.js","components/contact.js","components/projects.js","components/resume.js","components/landingpage.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["About","Component","Contact","Projects","props","state","activeTab","this","className","shadow","style","minWidth","margin","color","position","height","background","border","colored","name","onChange","tabId","setState","ripple","col","toggleCategories","Resume","Landing","width","src","alt","href","rel","target","aria-hidden","Main","exact","path","component","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a437853e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <h1>About Page</h1>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Contact Page</h1>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport {\n  Tabs,\n  Tab,\n  Grid,\n  Cell,\n  Card,\n  CardTitle,\n  CardText,\n  CardActions,\n  Button,\n  CardMenu,\n  IconButton\n} from 'react-mdl';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeTab: 0 };\n  }\n  toggleCategories() {\n    if (this.state.activeTab === 0) {\n      return (\n        <div className=\"projects-grid\">\n          <Card shadow={5} style={{ minWidth: '450', margin: 'auto' }}>\n            <CardTitle\n              style={{\n                color: 'white',\n                position: 'center',\n                height: '176px',\n                background:\n                  'url(https://icon-library.net/images/react-icon/react-icon-0.jpg) center / cover'\n              }}\n            >\n              React Project #1\n            </CardTitle>\n            <CardText>Lorem Ipsum</CardText>\n            <CardActions border>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n            </CardActions>\n            <CardMenu style={{ color: 'fff' }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n          <Card shadow={5} style={{ minWidth: '450', margin: 'auto' }}>\n            <CardTitle\n              style={{\n                color: 'white',\n                position: 'center',\n                height: '176px',\n                background:\n                  'url(https://icon-library.net/images/react-icon/react-icon-0.jpg) center / cover'\n              }}\n            >\n              React Project #1\n            </CardTitle>\n            <CardText>Lorem Ipsum</CardText>\n            <CardActions border>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n            </CardActions>\n            <CardMenu style={{ color: 'fff' }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n          <Card shadow={5} style={{ minWidth: '450', margin: 'auto' }}>\n            <CardTitle\n              style={{\n                color: 'white',\n                position: 'center',\n                height: '176px',\n                background:\n                  'url(https://icon-library.net/images/react-icon/react-icon-0.jpg) center / cover'\n              }}\n            >\n              React Project #1\n            </CardTitle>\n            <CardText>Lorem Ipsum</CardText>\n            <CardActions border>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n            </CardActions>\n            <CardMenu style={{ color: 'fff' }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n        </div>\n      );\n    } else if (this.state.activeTab === 1) {\n      return (\n        <div>\n          <h1>this is angular</h1>\n        </div>\n      );\n    } else if (this.state.activeTab === 2) {\n      return (\n        <div>\n          <h1>this is vue</h1>\n        </div>\n      );\n    } else if (this.state.activeTab === 3) {\n      return (\n        <div>\n          <h1>this is nodejs</h1>\n        </div>\n      );\n    } else if (this.state.activeTab === 4) {\n      return (\n        <div>\n          <h1>this is mongoDB</h1>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"category-tabs\">\n        <Tabs\n          activeTab={this.state.activeTab}\n          onChange={tabId => this.setState({ activeTab: tabId })}\n          ripple\n        >\n          <Tab>React</Tab>\n          <Tab>angular</Tab>\n          <Tab>vue</Tab>\n          <Tab>node</Tab>\n          <Tab>mongo</Tab>\n        </Tabs>\n\n        <Grid>\n          <Cell col={12}>\n            <div className=\"content\">{this.toggleCategories()}</div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\n\nclass Resume extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Resume Page</h1>\n      </div>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ width: '100%', margin: 'auto' }}>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <img\n              src=\"https://cdn0.iconfinder.com/data/icons/user-pictures/100/malecostume-512.png\"\n              alt=\"avatar\"\n              className=\"avatar-img\"\n            />\n            <div className=\"banner-text\">\n              <h1>Full Stack Web Developer</h1>\n\n              <hr />\n\n              <p>\n                React | Angular | Nodejs | CSS | MongoDB | Python | Wordpress |\n                Bootstrap\n              </p>\n              <div className=\"social-links\">\n                {/* linkedin*/}\n                <a\n                  href=\"http://google.com\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                </a>\n                {/* github*/}\n                <a\n                  href=\"http://google.com\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                </a>\n                {/* freecodecamp*/}\n                <a\n                  href=\"http://google.com\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <i className=\"fa fa-free-code-camp\" aria-hidden=\"true\" />\n                </a>\n                {/* youtube*/}\n                <a\n                  href=\"http://google.com\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <i className=\"fa fa-youtube-square\" aria-hidden=\"true\" />\n                </a>\n              </div>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport About from './about';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\nimport Landing from './landingpage';\nclass Main extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/resume\" component={Resume} />\n      </Switch>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport './App.css';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    /* Uses a header that scrolls with the text, rather than staying locked at the top */\n    <div className=\"demo-big-content\">\n      <Layout>\n        <Header className=\"header-color\" title=\"App\" scroll>\n          <Navigation>\n            <Link to=\"/resume\">Resume</Link>\n            <Link to=\"/about\">About</Link>\n            <Link to=\"/projects\">Projects</Link>\n            <Link to=\"/contact\">Contact</Link>\n          </Navigation>\n        </Header>\n        <Drawer title=\"Title\">\n          <Navigation>\n            <Link to=\"/resume\">Resume</Link>\n            <Link to=\"/about\">About</Link>\n            <Link to=\"/projects\">Projects</Link>\n            <Link to=\"/contact\">Contact</Link>\n          </Navigation>\n        </Drawer>\n        <Content>\n          <div className=\"page-content\" />\n          <Main />\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}